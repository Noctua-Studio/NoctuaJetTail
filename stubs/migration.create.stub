<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    //Variables para automatizaciÃ³n de migraciones
    //Eliminar las "s" anterior a "_"
    protected $tableName="{{ table }}";
    protected $translationsTableName="{{ table }}_translations";
    protected $primaryKey="{{ table }}_id";
    protected $tableColumns=[
        'string'=>[

        ],
        'text'=>[
            
        ]
    ];
    protected $tableColumnsTranslated=[
        'string'=>[

        ],
        'text'=>[
            
        ]
    ];

    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create($this->tableName, function (Blueprint $table) {
            $table->id();

            foreach($this->tableColumns['string'] as $column){
                $table->string($column);
            }
            foreach($this->tableColumns['text'] as $column){
                $table->text($column);
            }

            //table columns

            $table->timestamps();
        });

        if (Schema::hasTable($this->tableName)) {
            Schema::create($this->translationsTableName, function (Blueprint $table) {
                $table->id();
                $table->foreignId($this->primaryKey)->constrained();
                $table->string('locale')->index();


                foreach($this->tableColumnsTranslated['string'] as $column){
                    $table->string($column);
                }
                foreach($this->tableColumnsTranslated['text'] as $column){
                    $table->text($column);
                }
                
                //Table columns

                $table->unique([$this->primaryKey,'locale']);
            });
        }
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists($this->tableName);
        Schema::dropIfExists($this->translationsTableName);
    }
};
